name: OPAQUE
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3
        with:
          go-version-file: ./go.mod

      # Linting
      - name: Linting
        uses: golangci/golangci-lint-action@5c56cd6c9dc07901af25baab6f2b0d9f3b7c3018 # pin@v2
        with:
          version: latest
          args: --config=./.github/.golangci.yml ./...
          only-new-issues: true

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.19', '1.18' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3
        with:
          go-version: ${{ matrix.go }}

      # Test
      - name: Run Tests
        run: cd .github && make test

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3
        with:
          go-version-file: ./go.mod

      # Coverage
      - name: Run coverage
        run: cd .github && make cover

      # Codecov
      - name: Codecov
        uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192 # pin@v1
        with:
          file: .github/coverage.out

      # Sonar
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@cb201f3b2d7a38231a8c042dfea4539c8bea180b # pin@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=bytemare-github -Dsonar.projectKey=bytemare_opaque -Dsonar.go.coverage.reportPaths=.github/coverage.out -Dsonar.sources=. -Dsonar.test.exclusions=examples_test.go,tests/** -Dsonar.coverage.exclusions=examples_test.go,tests/** -Dsonar.tests=tests/ -Dsonar.verbose=true
